@model WebApplication1.Models.WalletDetailsViewModel

@{
    ViewData["Title"] = "Моя карта";
}

<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" />
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<style>
    .wallet-container {
        display: flex;
        justify-content: space-between;
        align-items: flex-start;
        padding: 50px;
        background-color: #e0e0e0;
        gap: 50px;
        flex-wrap: wrap;
    }

    .wallet-card {
        background-color: @Model.Wallet.Color;
        color: white;
        border-radius: 20px;
        width: 400px;
        height: 200px;
        padding: 25px;
        font-size: 20px;
        display: flex;
        flex-direction: column;
        justify-content: space-between;
        box-shadow: 0 0 15px rgba(0, 0, 0, 0.3);
    }

    .wallet-label {
        font-size: 16px;
        opacity: 0.9;
    }

    .wallet-number {
        font-size: 22px;
        letter-spacing: 2px;
    }

    .wallet-footer {
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

    .carousel-item {
        padding: 10px;
        background: #fff;
        border-radius: 10px;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
    }

    #walletChart {
        width: 100% !important;
        max-width: 1000px;
        height: 300px !important;
        margin: 0 auto;
    }
</style>

<div class="wallet-container">
    <div>
        <h2>Моя карта</h2>
        <div class="wallet-card">
            <div class="wallet-label">@Model.Wallet.BankName</div>
            <div class="wallet-number">@Model.Wallet.CardNumber</div>
            <div class="wallet-footer">
                <div>@Model.Wallet.Balance.ToString("F2") @Model.Wallet.Currency</div>
                <div>@Model.Wallet.OwnerInitials</div>
            </div>
        </div>

        <a asp-action="Edit" asp-controller="Wallet" asp-route-id="@Model.Wallet.Id" class="btn btn-outline-light mt-2">Редагувати</a>
    </div>

    <div class="flex-grow-1">
        <h4>Останні витрати</h4>
        @if (Model.RecentTransactions != null && Model.RecentTransactions.Any())
        {
            <div id="expenseCarousel" class="carousel slide" data-bs-ride="carousel">
                <div class="carousel-inner">
                    @for (int i = 0; i < Model.RecentTransactions.Count; i++)
                    {
                        var t = Model.RecentTransactions[i];
                        <div class="carousel-item @(i == 0 ? "active" : "")">
                            <h5>@t.Category</h5>
                            <p>Сума: @t.Amount</p>
                            <p>@(t.Type == TransactionType.Income ? "Дохід" : "Витрата")</p>
                            <p>Дата: @t.Date.ToString("dd.MM.yyyy HH:mm")</p>
                        </div>
                    }
                </div>
                <button class="carousel-control-prev" type="button" data-bs-target="#expenseCarousel" data-bs-slide="prev">
                    <span class="carousel-control-prev-icon"></span>
                </button>
                <button class="carousel-control-next" type="button" data-bs-target="#expenseCarousel" data-bs-slide="next">
                    <span class="carousel-control-next-icon"></span>
                </button>
            </div>
        }
        else
        {
            <p>Немає транзакцій для цього гаманця.</p>
        }
    </div>
</div>

@if (Model.Labels.Any() && Model.Amounts.Any())
{
    <div class="mt-5">
        <h4>Графік витрат</h4>
        <canvas id="walletChart"></canvas>

        <script>
            const ctx = document.getElementById('walletChart').getContext('2d');
            new Chart(ctx, {
                type: 'line',
                data: {
                    labels: @Html.Raw(Json.Serialize(Model.Labels)),
                    datasets: [{
                        label: 'Витрати (грн)',
                        data: @Html.Raw(Json.Serialize(Model.Amounts)),
                        borderColor: 'rgba(0, 123, 255, 1)',
                        backgroundColor: 'rgba(0, 123, 255, 0.1)',
                        fill: false,
                        tension: 0.4,
                        pointRadius: 4
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    layout: {
                        padding: {
                            bottom: 30
                        }
                    },
                    scales: {
                        x: {
                            ticks: {
                                autoSkip: false,
                                maxRotation: 30,
                                minRotation: 30
                            }
                        },
                        y: {
                            beginAtZero: true
                        }
                    }
                }
            });
        </script>
    </div>
}

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
